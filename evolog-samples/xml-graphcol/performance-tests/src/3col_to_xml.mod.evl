#module threecol_to_xml (coloring/1 => {coloring_xmlstr/1}) {
    coloring_entry(vertex(ID, COL), TAIL) :- coloring(lst(col(ID, COL), TAIL)).
    coloring_entry(vertex(ID, COL), TAIL) :- coloring_entry(_, lst(col(ID, COL), TAIL)).
    coloring_entry_pred(ID, ID_PRED) :- coloring_entry(vertex(ID, _), lst(col(ID_PRED, _), _)).
    coloring_entry_has_pred(ID) :- coloring_entry_pred(ID, _).
    coloring_entry_is_pred(ID) :- coloring_entry_pred(_, ID).
    coloring_entry_first(ID) :- coloring_entry(vertex(ID, _), _), not coloring_entry_has_pred(ID).
    coloring_entry_last(ID) :- coloring_entry(vertex(ID, _), _), not coloring_entry_is_pred(ID).

    coloring_tag_open("<coloring>").
    coloring_tag_close("</coloring>").

    coloring_part(ID, STR) :- 
        coloring_entry(vertex(ID, COL), _), 
        &stdlib_string_concat["<vertex><id>", ID](S1),
        &stdlib_string_concat[S1, "</id><color>"](S2),
        &stdlib_string_concat[S2, COL](S3),
        &stdlib_string_concat[S3, "</color></vertex>"](STR).

    coloring_xmlstr_upto(STR, ID) :- 
        coloring_entry_first(ID), 
        coloring_part(ID, FIRST_PARTSTR),
        coloring_tag_open(OPENSTR),
        &stdlib_string_concat[OPENSTR, FIRST_PARTSTR](STR).

    coloring_xmlstr_upto(STR, ID) :- 
        coloring_entry_pred(ID, ID_PRED),
        coloring_xmlstr_upto(PREV_STR, ID_PRED),
        coloring_part(ID, PARTSTR),
        &stdlib_string_concat[PREV_STR, PARTSTR](STR).
        
    coloring_xmlstr(STR) :- 
        coloring_entry_last(ID),
        coloring_xmlstr_upto(PREV_STR, ID),
        coloring_tag_close(CLOSESTR),
        &stdlib_string_concat[PREV_STR, CLOSESTR](STR).	    
}